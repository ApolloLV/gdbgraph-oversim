//
// Generated file, do not edit! Created by opp_msgc 4.2 from overlay/simpleOverlay/SimplePresentationMessage.msg.
//

#ifndef _SIMPLEPRESENTATIONMESSAGE_M_H_
#define _SIMPLEPRESENTATIONMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include <NodeHandle.h>
#include <CommonMessages_m.h>
// }}



/**
 * Class generated from <tt>overlay/simpleOverlay/SimplePresentationMessage.msg</tt> by opp_msgc.
 * <pre>
 * packet SimplePresentationMessage extends BaseOverlayMessage {
 *     NodeHandle content;
 * }
 * </pre>
 */
class SimplePresentationMessage : public ::BaseOverlayMessage
{
  protected:
    NodeHandle content_var;

  private:
    void copy(const SimplePresentationMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SimplePresentationMessage&);

  public:
    SimplePresentationMessage(const char *name=NULL, int kind=0);
    SimplePresentationMessage(const SimplePresentationMessage& other);
    virtual ~SimplePresentationMessage();
    SimplePresentationMessage& operator=(const SimplePresentationMessage& other);
    virtual SimplePresentationMessage *dup() const {return new SimplePresentationMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual NodeHandle& getContent();
    virtual const NodeHandle& getContent() const {return const_cast<SimplePresentationMessage*>(this)->getContent();}
    virtual void setContent(const NodeHandle& content);
};

inline void doPacking(cCommBuffer *b, SimplePresentationMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SimplePresentationMessage& obj) {obj.parsimUnpack(b);}


#endif // _SIMPLEPRESENTATIONMESSAGE_M_H_
